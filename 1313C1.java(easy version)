import java.io.BufferedReader; 
import java.io.IOException; 
import java.io.InputStreamReader; 
import java.util.*; 
import java.util.StringTokenizer;
import java.io.DataInputStream; 
import java.io.FileInputStream;
import java.io.File;
import java.lang.*;
import java.net.*;



  
public class Main
{ 
    static class FastReader 
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int cint() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long clong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double cdouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String cline() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    }
    static class mycoom implements Comparator<Integer>{
        public int compare(Integer a, Integer b){
            return b-a;
        }
    }
    
    
  public static void main(String[] args)throws Exception{
    FastReader f=new FastReader();
    int n=f.cint();
    int []arr=new int[n];int max=0;int index=-1;
    for (int i=0; i<n;i++){
        arr[i]=f.cint();
        
    }
    long abs_max=0;
    int abs_index=-1;
    
    long[]act_arr=new long[n];
    for(int i=0;i<n;i++){
        max=arr[i];
        int act_max=max;
        index=i;
        long sum=arr[i];
        for (int j=index+1;j<n;j++){
            sum+=Math.min(arr[j],max);
            max=Math.min(arr[j],max);
        }
        max=act_max;
        for(int j=index-1;j>=0;j--){
            sum+=Math.min(arr[j],max);
            max=Math.min(arr[j],max);
    }
    act_arr[index]=sum;
    if(sum>abs_max){
        abs_max=sum;
        abs_index=index;

    }
}
max=arr[abs_index];
for(int i=abs_index+1;i<n;i++){

    arr[i]=Math.min(arr[i],max);
    max=arr[i];
}
max=arr[abs_index];
for(int i=abs_index-1;i>=0;i--){
    arr[i]=Math.min(arr[i],max);
    max=arr[i];
    }
for(int i=0; i<n;i++){
    System.out.print(arr[i]+" ");

}
}
}












   
