import java.io.BufferedReader; 
import java.io.IOException; 
import java.io.InputStreamReader; 
import java.util.*; 
import java.util.StringTokenizer;
import java.io.DataInputStream; 
import java.io.FileInputStream;
import java.io.File;
import java.lang.*;
import java.net.*;



  
public class Main
{ 
    static class FastReader 
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int cint() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long clong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double cdouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String cline() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    }
    
    
  public static void main(String[] args)throws Exception{
    FastReader f=new FastReader();
    int n=f.cint();int k=f.cint();
    PriorityQueue<Integer> alice=new PriorityQueue<Integer>();
    PriorityQueue<Integer> bob=new PriorityQueue<Integer>();
    PriorityQueue<Integer>both=new PriorityQueue<Integer>();
    for(int i=0;i<n;i++){
        int t=f.cint();
        int l=f.cint();
        int r=f.cint();
        if(l==0&&r==1){
            alice.add(t);
        }
        else if(l==1&&r==0){
            bob.add(t);
        }
        else if(l==1&&r==1){
            both.add(t);
        }
        else continue;

    }
    if(both.size()+alice.size()<k||both.size()+bob.size()<k){
        System.out.println(-1);
        System.exit(0);
    }
    int count=0;int ans=0;
    while(count<k){

        if(alice.size()>0&&bob.size()>0&&both.size()>0&&alice.peek()+bob.peek()<both.peek()||both.size()==0){
            ans+=alice.poll()+bob.poll();
            count++;

        }
        else if(alice.size()==0||bob.size()==0||alice.peek()+bob.peek()>=both.peek()){
            ans+=both.poll();
            count++;
        }
    }
    System.out.println(ans);

    

        }
    }
